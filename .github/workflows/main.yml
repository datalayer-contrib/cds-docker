name: Build and push Docker images

on: push

jobs:
  
  build_voila_singleuser:
    name: Build and Push jh-voila-oauth-singleuser
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      -
        name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ideonate/jh-voila-oauth-singleuser
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          path: ./voila
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          build_args: |
            BASE_REPO=jupyterhub/singleuser:1.2
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

  build_voila_r:
    name: Build and Push jh-voila-oauth-r
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build docker 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./voila
          repository: ideonate/jh-voila-oauth-r
          build_args: BASE_REPO=jupyter/r-notebook:latest
          tag_with_ref: true
          tag_with_sha: true

  build_voila_datascience:
    name: Build and Push jh-voila-oauth-datascience
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build docker 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./voila
          repository: ideonate/jh-voila-oauth-datascience
          build_args: BASE_REPO=jupyter/datascience-notebook:latest
          tag_with_ref: true
          tag_with_sha: true

  build_voila_scipy:
    name: Build and Push jh-voila-oauth-scipy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build docker 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./voila
          repository: ideonate/jh-voila-oauth-scipy
          build_args: BASE_REPO=jupyter/scipy-notebook:latest
          tag_with_ref: true
          tag_with_sha: true


  build_all_basic:
    name: Build and Push containds-all-basic
    needs: build_voila_singleuser
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
         
      - name: Step docker build 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./all
          repository: ideonate/containds-all-basic
          build_args: BASE_REPO=ideonate/jh-voila-oauth-singleuser:sha-${{ steps.getshortsha.outputs.sha_short }}
          tag_with_ref: true
          tag_with_sha: true

  build_all_scipy:
    name: Build and Push containds-all-scipy
    needs: build_voila_scipy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
         
      - name: Step docker build 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./all
          repository: ideonate/containds-all-scipy
          build_args: BASE_REPO=ideonate/jh-voila-oauth-scipy:sha-${{ steps.getshortsha.outputs.sha_short }}
          tag_with_ref: true
          tag_with_sha: true


  build_rshiny:
    name: Build and Push containds-rshiny
    needs: build_voila_r
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
         
      - name: Step docker build 
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./rshiny
          repository: ideonate/containds-rshiny
          build_args: BASE_REPO=ideonate/jh-voila-oauth-r:sha-${{ steps.getshortsha.outputs.sha_short }}
          tag_with_ref: true
          tag_with_sha: true


  build_scipyr_notebook:
    name: Build and Push scipyr-notebook
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"
          
      - name: Step docker build all parts
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./voila
          repository: ideonate/datascience-notebook-voila
          build_args: BASE_REPO=jupyter/datascience-notebook:latest
          tag_with_ref: true
          tag_with_sha: true
          push: false

      - name: Step docker build all parts
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./all
          repository: ideonate/datascience-notebook-all
          build_args: BASE_REPO=ideonate/datascience-notebook-voila:sha-${{ steps.getshortsha.outputs.sha_short }}
          tag_with_ref: true
          tag_with_sha: true
          push: false

      - name: Step docker build rshiny parts
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: ./rshiny
          repository: ideonate/containds-allr-datascience
          build_args: BASE_REPO=ideonate/datascience-notebook-all:sha-${{ steps.getshortsha.outputs.sha_short }}
          tag_with_ref: true
          tag_with_sha: true
