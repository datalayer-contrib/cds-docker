name: Build and push Docker images

on: push

jobs:
  
  build_voila_singleuser:
    name: Build and Push jh-voila-oauth-singleuser
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/jh-voila-oauth-singleuser
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./voila
          file: ./voila/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=jupyterhub/singleuser:1.2
          labels: ${{ steps.docker_meta.outputs.labels }}


  build_voila_r:
    name: Build and Push jh-voila-oauth-r
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/jh-voila-oauth-r
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./voila
          file: ./voila/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=jupyter/r-notebook:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  build_voila_datascience:
    name: Build and Push jh-voila-oauth-datascience
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/jh-voila-oauth-datascience
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./voila
          file: ./voila/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=jupyter/datascience-notebook:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  build_voila_scipy:
    name: Build and Push jh-voila-oauth-scipy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/jh-voila-oauth-scipy
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./voila
          file: ./voila/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=jupyter/scipy-notebook:latest
          labels: ${{ steps.docker_meta.outputs.labels }}

  build_all_basic:
    name: Build and Push containds-all-basic
    needs: build_voila_singleuser
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"

      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/containds-all-basic
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./all
          file: ./all/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=ideonate/jh-voila-oauth-singleuser:sha-${{ steps.getshortsha.outputs.sha_short }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  build_all_scipy:
    name: Build and Push containds-all-scipy
    needs: build_voila_scipy
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"

      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/containds-all-scipy
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./all
          file: ./all/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=ideonate/jh-voila-oauth-scipy:sha-${{ steps.getshortsha.outputs.sha_short }}
          labels: ${{ steps.docker_meta.outputs.labels }}


  build_rshiny:
    name: Build and Push containds-rshiny
    needs: build_voila_r
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
          
      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"


      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/containds-rshiny
          tag-sha: true

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build docker 
        uses: docker/build-push-action@v2
        with:
          context: ./all
          file: ./all/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          build-args: |
            BASE_REPO=ideonate/jh-voila-oauth-r:sha-${{ steps.getshortsha.outputs.sha_short }}
          labels: ${{ steps.docker_meta.outputs.labels }}

  build_scipyr_notebook:
    name: Build and Push scipyr-notebook
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get Short SHA
        id: getshortsha
        run: echo "::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})"

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Cache Docker layers
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Docker meta 1
        id: docker_meta1
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/datascience-notebook-voila
          tag-sha: true

      - name: Build docker 1
        uses: docker/build-push-action@v2
        with:
          context: ./voila
          file: ./voila/Dockerfile
          tags: ${{ steps.docker_meta1.outputs.tags }}
          build-args: |
            BASE_REPO=jupyter/datascience-notebook:latest
          labels: ${{ steps.docker_meta1.outputs.labels }}
          load: true
          cache-to: type=local,src=/tmp/.buildx-cache
          cache-from: type=local,dest=/tmp/.buildx-cache

      -
        name: Docker meta 2
        id: docker_meta2
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/datascience-notebook-all
          tag-sha: true

      - name: Build docker 2
        uses: docker/build-push-action@v2
        with:
          context: ./all
          file: ./all/Dockerfile
          tags: ${{ steps.docker_meta2.outputs.tags }}
          build-args: |
            BASE_REPO=ideonate/datascience-notebook-voila:sha-${{ steps.getshortsha.outputs.sha_short }}
          labels: ${{ steps.docker_meta2.outputs.labels }}
          load: true
          cache-to: type=local,src=/tmp/.buildx-cache
          cache-from: type=local,dest=/tmp/.buildx-cache

      -
        name: Docker meta 3
        id: docker_meta3
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ideonate/containds-allr-datascience
          tag-sha: true

      - name: Build docker 3
        uses: docker/build-push-action@v2
        with:
          context: ./rshiny
          file: ./rshiny/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta3.outputs.tags }}
          build-args: |
            BASE_REPO=ideonate/datascience-notebook-all:sha-${{ steps.getshortsha.outputs.sha_short }}
          labels: ${{ steps.docker_meta3.outputs.labels }}
          cache-to: type=local,src=/tmp/.buildx-cache
          cache-from: type=local,dest=/tmp/.buildx-cache

